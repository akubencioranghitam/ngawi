local players = game:GetService("Players")
local runService = game:GetService("RunService")
local localPlayer = players.LocalPlayer
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
local camera = workspace.CurrentCamera

-- UI Setup
local Window = Rayfield:CreateWindow({
    Name = "ESP Hub",
    LoadingTitle = "ESP Loader",
    LoadingSubtitle = "by Professor Synapse",
    Theme = "DarkBlue"
})
local Tab = Window:CreateTab("ESP", "eye")

-- ESP Settings
local espEnabled = false
local tracersEnabled = false
local namesEnabled = false
local distanceEnabled = false
local espColor = Color3.fromRGB(255, 0, 0)
local baseBoxSize = Vector2.new(40, 80) -- Base box size

-- Table to store ESP Boxes & Traces
local espBoxes = {}

-- Function to create ESP for a player
local function createESP(player)
    if player == localPlayer then return end

    local espBox = Drawing.new("Square")
    espBox.Color = espColor
    espBox.Thickness = 2
    espBox.Filled = false
    espBox.Visible = false

    local tracer = Drawing.new("Line")
    tracer.Color = espColor
    tracer.Thickness = 1
    tracer.Visible = false

    local nameTag = Drawing.new("Text")
    nameTag.Color = Color3.fromRGB(255, 255, 255)
    nameTag.Size = 16
    nameTag.Center = true
    nameTag.Visible = false

    local distanceTag = Drawing.new("Text")
    distanceTag.Color = Color3.fromRGB(255, 255, 255)
    distanceTag.Size = 16
    distanceTag.Center = true
    distanceTag.Visible = false

    espBoxes[player] = {box = espBox, line = tracer, name = nameTag, distance = distanceTag}
end

-- Function to remove ESP for a player
local function removeESP(player)
    if espBoxes[player] then
        espBoxes[player].box:Remove()
        espBoxes[player].line:Remove()
        espBoxes[player].name:Remove()
        espBoxes[player].distance:Remove()
        espBoxes[player] = nil
    end
end

-- Function to update ESP positions
local function updateESP()
    local viewportSize = camera.ViewportSize
    local screenCenterX, screenBottomY = viewportSize.X / 2, viewportSize.Y
    
    for _, player in pairs(players:GetPlayers()) do
        if player ~= localPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local rootPart = player.Character.HumanoidRootPart
            local screenPos, onScreen = camera:WorldToViewportPoint(rootPart.Position)
            local distance = (localPlayer.Character and localPlayer.Character:FindFirstChild("HumanoidRootPart") and localPlayer.Character.HumanoidRootPart.Position - rootPart.Position).Magnitude or 50
            local sizeMultiplier = math.clamp(10 / distance, 0.4, 1) -- Scale based on distance
            local adjustedBoxSize = baseBoxSize * sizeMultiplier
            
            local esp = espBoxes[player]
            
            if not esp then
                createESP(player)
                esp = espBoxes[player]
            end
            
            if esp then
                if onScreen and espEnabled then
                    esp.box.Size = adjustedBoxSize
                    esp.box.Position = Vector2.new(screenPos.X - adjustedBoxSize.X / 2, screenPos.Y - adjustedBoxSize.Y / 2)
                    esp.box.Visible = true
                    esp.box.Color = espColor
                    
                    if tracersEnabled then
                        esp.line.From = Vector2.new(screenCenterX, screenBottomY)
                        esp.line.To = Vector2.new(screenPos.X, screenPos.Y + adjustedBoxSize.Y / 2)
                        esp.line.Visible = true
                        esp.line.Color = espColor
                    else
                        esp.line.Visible = false
                    end
                    
                    if namesEnabled then
                        esp.name.Text = player.Name
                        esp.name.Position = Vector2.new(screenPos.X, screenPos.Y - adjustedBoxSize.Y / 2 - 15)
                        esp.name.Visible = true
                    else
                        esp.name.Visible = false
                    end
                    
                    if distanceEnabled then
                        esp.distance.Text = string.format("%.1fm", distance)
                        esp.distance.Position = Vector2.new(screenPos.X, screenPos.Y + adjustedBoxSize.Y / 2 + 5)
                        esp.distance.Visible = true
                    else
                        esp.distance.Visible = false
                    end
                else
                    esp.box.Visible = false
                    esp.line.Visible = false
                    esp.name.Visible = false
                    esp.distance.Visible = false
                end
            end
        else
            removeESP(player) -- Remove ESP if player leaves or dies
        end
    end
end

-- Create ESP for all players
for _, player in pairs(players:GetPlayers()) do
    createESP(player)
end

-- UI Elements
Tab:CreateToggle({
    Name = "Enable ESP",
    CurrentValue = false,
    Flag = "ToggleESP",
    Callback = function(value)
        espEnabled = value
    end
})

Tab:CreateToggle({
    Name = "Enable Tracers",
    CurrentValue = false,
    Flag = "ToggleTracers",
    Callback = function(value)
        tracersEnabled = value
    end
})

Tab:CreateToggle({
    Name = "Show Player Names",
    CurrentValue = false,
    Flag = "ToggleNames",
    Callback = function(value)
        namesEnabled = value
    end
})

Tab:CreateToggle({
    Name = "Show Distance",
    CurrentValue = false,
    Flag = "ToggleDistance",
    Callback = function(value)
        distanceEnabled = value
    end
})

Tab:CreateColorPicker({
    Name = "ESP Color",
    Color = Color3.fromRGB(255, 0, 0),
    Flag = "ESPColor",
    Callback = function(value)
        espColor = value
        for _, esp in pairs(espBoxes) do
            esp.box.Color = espColor
            esp.line.Color = espColor
        end
    end
})

-- Update ESP on RenderStep
runService.RenderStepped:Connect(updateESP)

-- Handle new players
players.PlayerAdded:Connect(function(player)
    createESP(player)
    player.CharacterAdded:Connect(function()
        task.wait(1) -- Allow character to load properly
        createESP(player)
    end)
end)
players.PlayerRemoving:Connect(removeESP)
